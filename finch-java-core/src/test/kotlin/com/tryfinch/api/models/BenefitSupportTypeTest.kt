package com.tryfinch.api.models

import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test

class BenefitSupportTypeTest {

    @Test
    fun createBenefitSupportType() {
        val benefitSupportType =
            BenefitSupportType.builder()
                .supportedFeatures(
                    BenefitSupportType.BenefitFeature.builder()
                        .annualMaximum(true)
                        .catchUp(true)
                        .companyContribution(
                            listOf(BenefitSupportType.BenefitFeature.CompanyContribution.FIXED)
                        )
                        .description("string")
                        .employeeDeduction(
                            listOf(BenefitSupportType.BenefitFeature.EmployeeDeduction.FIXED)
                        )
                        .frequencies(listOf(BenefitFrequency.ONE_TIME))
                        .hsaContributionLimit(
                            listOf(
                                BenefitSupportType.BenefitFeature.HsaContributionLimit.INDIVIDUAL
                            )
                        )
                        .build()
                )
                .supportedOperations(
                    BenefitSupportType.SupportPerBenefitType.builder()
                        .companyBenefits(
                            BenefitSupportType.SupportPerBenefitType.OperationSupportMatrix
                                .builder()
                                .create(
                                    BenefitSupportType.SupportPerBenefitType.OperationSupportMatrix
                                        .OperationSupport
                                        .SUPPORTED
                                )
                                .delete(
                                    BenefitSupportType.SupportPerBenefitType.OperationSupportMatrix
                                        .OperationSupport
                                        .SUPPORTED
                                )
                                .read(
                                    BenefitSupportType.SupportPerBenefitType.OperationSupportMatrix
                                        .OperationSupport
                                        .SUPPORTED
                                )
                                .update(
                                    BenefitSupportType.SupportPerBenefitType.OperationSupportMatrix
                                        .OperationSupport
                                        .SUPPORTED
                                )
                                .build()
                        )
                        .individualBenefits(
                            BenefitSupportType.SupportPerBenefitType.OperationSupportMatrix
                                .builder()
                                .create(
                                    BenefitSupportType.SupportPerBenefitType.OperationSupportMatrix
                                        .OperationSupport
                                        .SUPPORTED
                                )
                                .delete(
                                    BenefitSupportType.SupportPerBenefitType.OperationSupportMatrix
                                        .OperationSupport
                                        .SUPPORTED
                                )
                                .read(
                                    BenefitSupportType.SupportPerBenefitType.OperationSupportMatrix
                                        .OperationSupport
                                        .SUPPORTED
                                )
                                .update(
                                    BenefitSupportType.SupportPerBenefitType.OperationSupportMatrix
                                        .OperationSupport
                                        .SUPPORTED
                                )
                                .build()
                        )
                        .build()
                )
                .build()
        assertThat(benefitSupportType).isNotNull
        assertThat(benefitSupportType.supportedFeatures())
            .contains(
                BenefitSupportType.BenefitFeature.builder()
                    .annualMaximum(true)
                    .catchUp(true)
                    .companyContribution(
                        listOf(BenefitSupportType.BenefitFeature.CompanyContribution.FIXED)
                    )
                    .description("string")
                    .employeeDeduction(
                        listOf(BenefitSupportType.BenefitFeature.EmployeeDeduction.FIXED)
                    )
                    .frequencies(listOf(BenefitFrequency.ONE_TIME))
                    .hsaContributionLimit(
                        listOf(BenefitSupportType.BenefitFeature.HsaContributionLimit.INDIVIDUAL)
                    )
                    .build()
            )
        assertThat(benefitSupportType.supportedOperations())
            .contains(
                BenefitSupportType.SupportPerBenefitType.builder()
                    .companyBenefits(
                        BenefitSupportType.SupportPerBenefitType.OperationSupportMatrix.builder()
                            .create(
                                BenefitSupportType.SupportPerBenefitType.OperationSupportMatrix
                                    .OperationSupport
                                    .SUPPORTED
                            )
                            .delete(
                                BenefitSupportType.SupportPerBenefitType.OperationSupportMatrix
                                    .OperationSupport
                                    .SUPPORTED
                            )
                            .read(
                                BenefitSupportType.SupportPerBenefitType.OperationSupportMatrix
                                    .OperationSupport
                                    .SUPPORTED
                            )
                            .update(
                                BenefitSupportType.SupportPerBenefitType.OperationSupportMatrix
                                    .OperationSupport
                                    .SUPPORTED
                            )
                            .build()
                    )
                    .individualBenefits(
                        BenefitSupportType.SupportPerBenefitType.OperationSupportMatrix.builder()
                            .create(
                                BenefitSupportType.SupportPerBenefitType.OperationSupportMatrix
                                    .OperationSupport
                                    .SUPPORTED
                            )
                            .delete(
                                BenefitSupportType.SupportPerBenefitType.OperationSupportMatrix
                                    .OperationSupport
                                    .SUPPORTED
                            )
                            .read(
                                BenefitSupportType.SupportPerBenefitType.OperationSupportMatrix
                                    .OperationSupport
                                    .SUPPORTED
                            )
                            .update(
                                BenefitSupportType.SupportPerBenefitType.OperationSupportMatrix
                                    .OperationSupport
                                    .SUPPORTED
                            )
                            .build()
                    )
                    .build()
            )
    }
}
